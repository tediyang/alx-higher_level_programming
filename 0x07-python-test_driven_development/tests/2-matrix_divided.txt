# 2-matrix_divided.txt
# Eyang, Daniel Eyoh

==============================
How to use 2-matrix_divided.py
==============================

This script defines a function that takes in a matrix and returns
a new matrix divided by a divisor provided.

Usage
=====

```matrix_divided(matrix, div)``` returns a new matrix with 
all the values divided by div.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::

    >>> matrix = [[4, 7, 9], [2, 8, 6]]
    >>> matrix_divided(matrix, 5)
    [[0.8, 1.4, 1.8], [0.4, 1.6, 1.2]]

This function also works with floats. Matrix (list) containing lists
of floats or div being a float.

::

    >>> matrix = [[1.5, 2.6, 3.2], [4.6, 5.5, 6.8]]
    >>> matrix_divided(matrix, 3)
    [[0.5, 0.87, 1.07], [1.53, 1.83, 2.27]]

::

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3.2)
    [[0.31, 0.62, 0.94], [1.25, 1.56, 1.88]]

Non-numbers
===========

```matrix_divided(matrix, div)``` expects a matrix that must be a list
of lists of integers or floats and also div must be a number (integer or float),
otherwise raise a TypeError.

::

    >>> matrix = [[1, 3, 'abc'], [2, 5, 6]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, '3')
    Traceback (most recent call last):
    TypeError: div must be a number

Each row of the matrix must be of the same size, otherwise raise a TypeError.

::

    >>> matrix = [[1, 2, 3], [4, 5, 6, 8]]
    >>> matrix_divided(matrix, 6)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

If matrix is empty raise TypeError.

::

    >>> matrix = []
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix should not be empty

div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError.

::

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
